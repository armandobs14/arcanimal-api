networks:
  arcanimal_network:
    driver: bridge

volumes:
  postgres_data:


services:
  traefik:
    image: "traefik"
    container_name: "traefik"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - arcanimal_network
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  db:
    container_name: arcanimal_db
    image: postgres:16
    ports:
      - "9668:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    networks:
      - arcanimal_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env

  api:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    container_name: arcanimal_api
    build:
      context: ../arcanimal-api
      dockerfile: Dockerfile
    image: arcanimal_api
    # ports:
    #   - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - arcanimal_network
    volumes:
      - ./src:/usr/src/app/src
      - ./uploads:/usr/src/app/uploads
    depends_on:
      - db
      - traefik
    restart: always
    env_file:
      - .env

  front:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.front.entrypoints=web"
      - "traefik.http.routers.front.rule=Host(`front.localhost`)"
      - "traefik.http.services.front.loadbalancer.server.port=8000"
    restart: always
    container_name: arcanimal_front
    build:
      context: ../arcanimal-front
      dockerfile: Dockerfile
      args:
        ENV: development
        API_URL: http://api.localhost
    image: arcanimal_front:${ENV:-production}
    # ports:
    #   - "4000:4000"
    env_file:
      - .env
    networks:
      - arcanimal_network

    depends_on:
      - api
      - traefik
